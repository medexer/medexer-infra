import { ApiProperty, OmitType } from '@nestjs/swagger';
import { Transform } from 'class-transformer';
import { IsEmail, IsEnum, IsNotEmpty, IsPhoneNumber, IsString } from 'class-validator';
import { AccountStatus, AccountType, BloodGroup, Genotype, ListEntityType, ListItemType } from 'libs/common/src/constants/enums';
import {
  toLowerCaseTransformer,
  trimTransformer,
} from 'libs/common/src/helpers/local-class-validator';
import { ListItem } from 'libs/common/src/models/list.item.model';

export class UpdateFCMTokenDTO {
  @ApiProperty({
    example: '1733689739675',
    description: 'FCM token for push notifications generated by mobile device.',
  })
  @IsString()
  @IsNotEmpty()
  fcmToken: string;
}

export class UpdateAccountNameDTO {
  @ApiProperty({
    example: 'John',
    description: 'New account first name.',
  })
  @IsString()
  @IsNotEmpty()
  firstName: string;

  @ApiProperty({
    example: 'Doe',
    description: 'New account last name.',
  })
  @IsString()
  @IsNotEmpty()
  lastName: string;
}

export class UpdateProfileImageDTO {
  @ApiProperty({
    example: 'https://example.com/image.jpg',
    description: 'URL of the image to be uploaded.',
  })
  @IsString()
  @IsNotEmpty()
  imageUrl: string;
}

export class UpdateAccountPasswordDTO {
  @ApiProperty({
    example: 'Password123',
    description: 'Current account password.',
  })
  @IsString()
  @IsNotEmpty()
  currentPassword: string;

  @ApiProperty({
    example: 'Password@123',
    description: 'New account password.',
  })
  @IsString()
  @IsNotEmpty()
  newPassword: string;
}

export class DeleteAccountDTO {
  @ApiProperty({
    example: 'Password123',
    description: 'Current account password.',
  })
  @IsString()
  @IsNotEmpty()
  password: string;
}

export class UpdateAccountEmailDTO {
  @ApiProperty({
    example: 'kunle@gmail.com',
    description: 'New account email.',
  })
  @IsEmail()
  @IsNotEmpty()
  @Transform(({ value }) => trimTransformer(toLowerCaseTransformer(value)))
  newEmail: string;
}

export class VerifyNewAccountEmailDTO {
  @ApiProperty({
    example: '3950',
    description: 'Activation token (OTP)',
  })
  @IsString()
  @IsNotEmpty()
  otp: string;
}

export class UpdateAccountPhoneDTO {
  @ApiProperty({
    example: '+2349093920293',
    description: 'New account phone.',
  })
  @IsNotEmpty()
  @IsPhoneNumber()
  @Transform(({ value }) => trimTransformer(value))
  newPhone: string;

  @ApiProperty({
    example: 'Password123',
    description: 'Account password.',
  })
  @IsString()
  @IsNotEmpty()
  password: string;
}

export class AddListItemDTO {
  @ApiProperty({
    example: '123456',
    description: 'ID of the item.',
  })
  @IsString()
  @IsNotEmpty()
  itemId: string;

  @ApiProperty({
    enum: ListItemType,
    default: ListItemType.FAVORITE,
    description: 'Type of the list item.',
  })
  @IsEnum(ListItemType)
  itemType: ListItemType;

  @ApiProperty({
    enum: ListEntityType,
    default: ListEntityType.DONATION_CENTER,
    description: 'Type of the list entity.',
  })
  @IsEnum(ListEntityType)
  entityType: ListEntityType;
}
